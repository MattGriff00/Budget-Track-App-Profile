{"version":3,"sources":["context/AppContext.js","components/Budget.js","components/Remaining.js","components/ExpenseTotal.js","components/ExpenseItem.js","components/ExpenseList.js","components/AddExpenseForm.js","App.js","components/Home.js","reportWebVitals.js","index.js"],"names":["AppReducer","state","action","type","expenses","payload","filter","expense","id","initialState","budget","AppContext","createContext","AppProvider","props","useReducer","dispatch","Provider","value","children","Budget","useContext","className","Remaining","totalExpenses","reduce","total","item","cost","alertType","ExpenseTotal","ExpenseItem","name","size","onClick","ExpenseList","map","AddExpenseForm","useState","setName","setCost","onSubmit","event","preventDefault","uuidv4","parseInt","for","required","onChange","target","App","Home","to","path","component","link","document","createElement","href","body","appendChild","click","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd645a72.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\n\r\nconst AppReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_EXPENSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texpenses: [...state.expenses, action.payload],\r\n\t\t\t};\r\n\t\tcase 'DELETE_EXPENSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texpenses: state.expenses.filter(\r\n\t\t\t\t\t(expense) => expense.id !== action.payload\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialState = {\r\n\tbudget: 2000,\r\n\texpenses: [\t],\r\n};\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = (props) => {\r\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tbudget: state.budget,\r\n\t\t\t\texpenses: state.expenses,\r\n\t\t\t\tdispatch,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n};","import React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst Budget = () => {\r\n\tconst { budget } = useContext(AppContext);\r\n\r\n\treturn (\r\n\t\t<div className='alert alert-secondary'>\r\n\t\t\t<span>Budget: ${budget}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Budget;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst Remaining = () => {\r\n\tconst { expenses, budget } = useContext(AppContext);\r\n\r\n\tconst totalExpenses = expenses.reduce((total, item) => {\r\n\t\treturn (total = total + item.cost);\r\n\t}, 0);\r\n\r\n\tconst alertType = totalExpenses > budget ? 'alert-danger' : 'alert-success';\r\n\r\n\treturn (\r\n\t\t<div className={`alert ${alertType}`}>\r\n\t\t\t<span>Remaining: ${budget - totalExpenses}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Remaining;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst ExpenseTotal = () => {\r\n\tconst { expenses } = useContext(AppContext);\r\n\r\n\tconst totalExpenses = expenses.reduce((total, item) => {\r\n\t\treturn (total += item.cost);\r\n\t}, 0);\r\n\r\n\treturn (\r\n\t\t<div className='alert alert-primary'>\r\n\t\t\t<span>Spent so far: ${totalExpenses}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseTotal;","import React, { useContext } from 'react';\r\nimport { TiDelete } from 'react-icons/ti';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst ExpenseItem = (props) => {\r\n\tconst { dispatch } = useContext(AppContext);\r\n\r\n\tconst handleDeleteExpense = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'DELETE_EXPENSE',\r\n\t\t\tpayload: props.id,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li className='list-group-item d-flex justify-content-between align-items-center'>\r\n\t\t\t{props.name}\r\n\t\t\t<div>\r\n\t\t\t\t<span className='badge badge-primary badge-pill mr-3'>\r\n\t\t\t\t\tÂ£{props.cost}\r\n\t\t\t\t</span>\r\n\t\t\t\t<TiDelete size='1.5em' onClick={handleDeleteExpense}></TiDelete>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem;","import React, { useContext } from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst ExpenseList = () => {\r\n\tconst { expenses } = useContext(AppContext);\r\n\r\n\treturn (\r\n\t\t<ul className='list-group'>\r\n\t\t\t{expenses.map((expense) => (\r\n\t\t\t\t<ExpenseItem id={expense.id} name={expense.name} cost={expense.cost} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpenseList;","import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddExpenseForm = () => {\r\n\tconst { dispatch } = useContext(AppContext);\r\n\r\n\tconst [name, setName] = useState('');\r\n\tconst [cost, setCost] = useState('');\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst expense = {\r\n\t\t\tid: uuidv4(),\r\n\t\t\tname: name,\r\n\t\t\tcost: parseInt(cost),\r\n\t\t};\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'ADD_EXPENSE',\r\n\t\t\tpayload: expense,\r\n\t\t});\r\n\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t<label for='name'>Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\trequired='required'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tid='name'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => setName(event.target.value)}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t<label for='cost'>Cost</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\trequired='required'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tid='cost'\r\n\t\t\t\t\t\tvalue={cost}\r\n\t\t\t\t\t\tonChange={(event) => setCost(event.target.value)}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t<button type='submit' className='btn btn-primary mt-3'>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddExpenseForm;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Budget from './components/Budget';\r\nimport Remaining from './components/Remaining';\r\nimport ExpenseTotal from './components/ExpenseTotal';\r\nimport ExpenseList from './components/ExpenseList';\r\nimport AddExpenseForm from './components/AddExpenseForm';\r\nimport { AppProvider } from './context/AppContext';\r\n\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<AppProvider>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1 className='mt-3'>My Budget Planner</h1>\r\n\t\t\t\t<div className='row mt-3'>\r\n\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t<Budget />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t<Remaining />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t<ExpenseTotal />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3 className='mt-3'>Expenses</h3>\r\n\t\t\t\t<div className='row mt-3'>\r\n\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t<ExpenseList />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3 className='mt-3'>Add Expense</h3>\r\n\t\t\t\t<div className='row mt-3'>\r\n\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t<AddExpenseForm />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</AppProvider>\r\n\t);\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nexport default function Home(){\r\n    return(\r\n      <BrowserRouter>\r\n        <Link to={\"/route\"}><button className='btnHome'>Return To Homepage</button></Link>\r\n          <Route\r\n            path=\"/route\"\r\n            component={() => {\r\n              var link = document.createElement(\"a\");\r\n              link.href = \"https://www.develop-griffin.com/\";\r\n              document.body.appendChild(link);\r\n\r\n              link.click();\r\n              return null;\r\n            }}\r\n          />\r\n      </BrowserRouter>\r\n      ); \r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Home from './components/Home'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}